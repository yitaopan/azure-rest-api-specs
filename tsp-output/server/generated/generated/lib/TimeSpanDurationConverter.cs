// Generated by @typespec/http-server-csharp
// <auto-generated />
#nullable enable

using System.Text.Json;
using System.Text.Json.Serialization;
using System.Xml;

namespace TypeSpec.Helpers.JsonConverters
{
    /// <summary>
    /// Converts between Json duration and .Net TimeSpan
    /// </summary>
    public class TimeSpanDurationConverter : JsonConverter<TimeSpan>
    {
        public override TimeSpan Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            if (typeToConvert != typeof(TimeSpan))
                throw new ArgumentException($"Cannot apply converter {this.GetType().FullName} to type {typeToConvert.FullName}");

            var value = reader.GetString();
            if (string.IsNullOrWhiteSpace(value)) return TimeSpan.MinValue;
            return XmlConvert.ToTimeSpan(value);
        }

        public override void Write(Utf8JsonWriter writer, TimeSpan value, JsonSerializerOptions options)
        {
            writer.WriteStringValue(XmlConvert.ToString(value));
        }
    }
}
